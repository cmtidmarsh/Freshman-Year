from graphics import*import webbrowserimport oswin = GraphWin('Find the Cheese', 800,600)win.yUp()message = Text(Point(360, 590), 'Please click the instructions button before game play.')message.draw(win)    def kitchen():    Frame = Rectangle(Point(630, 190), Point(750, 290))    Frame.setFill('saddle brown')    Frame.draw(win)        MouseImage = Image(Point(690, 240), "63359fb102530b953725756561bc43e0.png")    MouseImage.draw(win)        floor = Rectangle(Point(10, -20), Point(950, 20))    floor.setFill('tan')    floor.draw(win)    table = Oval(Point(610, 150), Point(790,100))    table.setFill('saddle brown')    table.draw(win)    tableLeg = Rectangle(Point(690,100), Point(710,25))    tableLeg.setFill('saddle brown')    tableLeg.draw(win)    tableBottom = Polygon(Point(665, 0),Point(690,25),Point(710,25), Point(730, 0))    tableBottom.setFill('saddle brown')    tableBottom.draw(win)    fridge = Rectangle(Point(0,0),Point(180,350))    fridge.setFill('silver')    fridge.draw(win)    divider = Line(Point(0,220),Point(180,220))    divider.draw(win)    handle1 = Line(Point(160,300), Point(160,270))    handle1.draw(win)    handle2 = handle1.clone()    handle2.move(0,-100)    handle2.draw(win)        BottomCabinet = Rectangle(Point(200,0),Point(600,160))    BottomCabinet.setFill('saddle brown')    BottomCabinet.draw(win)    BottomCabinetCupboard = Rectangle(Point(350,10), Point(480, 150))    BottomCabinetCupboard.setFill('sienna')    BottomCabinetCupboard.draw(win)    BottomCabinetDivider = Line(Point(415, 10), Point(415,150))    BottomCabinetDivider.draw(win)    BottomCabinetRight = Rectangle(Point(490, 150), Point(590, 10))        BottomCabinetRight.setFill('sienna')        BottomCabinetRight.draw(win)    BottomCabinetRightDivider = Line(Point(540, 150), Point(540,10))        BottomCabinetRightDivider.draw(win)    CupboardHandle = Rectangle(Point(400, 40), Point(400, 120))    CupboardHandle.draw(win)    CupboardHandle2 = CupboardHandle.clone()    CupboardHandle2.move(25,0)    CupboardHandle2.draw(win)    CupboardHandle3 = CupboardHandle2.clone()    CupboardHandle3.move(105,0)    CupboardHandle3.draw(win)    CupboardHandle4 = CupboardHandle3.clone()    CupboardHandle4.move(20, 0)    CupboardHandle4.draw(win)        InnerCabinet1 = Rectangle(Point(320, 560), Point(550, 370))        InnerCabinet1.setFill('Saddle Brown')    InnerCabinet1.draw(win)    InnerCabinetSet = InnerCabinet1.clone()    InnerCabinetSet.move(-100,0)    InnerCabinetSet.setFill('Saddle Brown')    InnerCabinetSet.draw(win)    InnerInnerDesign = Rectangle(Point(460, 550), Point(540, 380))        InnerInnerDesign.setFill('Sienna')        InnerInnerDesign.draw(win)    InnerInnerDesign2 = InnerInnerDesign.clone()        InnerInnerDesign2.move(-230, 0)    InnerInnerDesign2.draw(win)    InnerMiddleCabinetDivider = Line(Point(385, 560), Point(385, 370))        InnerMiddleCabinetDivider.draw(win)        InnerMiddleCabinetDivider2 = InnerMiddleCabinetDivider.clone()        InnerMiddleCabinetDivider2.move(-65,0)        InnerMiddleCabinetDivider2.draw(win)    InnerMiddleInnerDesign = Rectangle(Point(330, 550), Point(375, 380))        InnerMiddleInnerDesign.setFill('Sienna')        InnerMiddleInnerDesign.draw(win)    InnerMiddleInnerDesign2 = InnerMiddleInnerDesign.clone()        InnerMiddleInnerDesign2.move(65,0)        InnerMiddleInnerDesign2.setFill('Sienna')        InnerMiddleInnerDesign2.draw(win)    LeftCabinet = Rectangle(Point(20, 500), Point(200, 370))    LeftCabinet.setFill('saddle brown')    LeftCabinet.draw(win)    RightCabinet = LeftCabinet.clone()    RightCabinet.move(550, 0)    RightCabinet.draw(win)    RightCabinetDivider = Line(Point(660, 500), Point(660, 370))    RightCabinetDivider.draw(win)    RightCabinetInnerDesign = Rectangle(Point(580, 490), Point(650, 380))    RightCabinetInnerDesign.setFill('sienna')    RightCabinetInnerDesign.draw(win)    RightCabinetInnerDesign2 = RightCabinetInnerDesign.clone()    RightCabinetInnerDesign2.move(90,0)    RightCabinetInnerDesign2.draw(win)    LeftCabinetInnerDesign = RightCabinetInnerDesign2.clone()    LeftCabinetInnerDesign.move(-550,0)    LeftCabinetInnerDesign.draw(win)    LeftCabinetInnerDesign2 = LeftCabinetInnerDesign.clone()    LeftCabinetInnerDesign2.move(-90,0)    LeftCabinetInnerDesign2.draw(win)    LeftCabinetDivider = RightCabinetDivider.clone()    LeftCabinetDivider.move(-550,0)    LeftCabinetDivider.draw(win)    InnerCabinetHandle = CupboardHandle.clone()    InnerCabinetHandle.move(-300, 355)    InnerCabinetHandle2 = Rectangle(Point(130, 445), Point(130, 395))        InnerCabinetHandle2.draw(win)    TopCabinetHandle = Rectangle(Point(680, 445), Point(680, 395))        TopCabinetHandle.draw(win)    TopCabinetHandle2 = TopCabinetHandle.clone()        TopCabinetHandle2.move(-40,0)        TopCabinetHandle2.draw(win)    TopCabinetHandle3 = TopCabinetHandle2.clone()    TopCabinetHandle3.move(-235,0)        TopCabinetHandle3.draw(win)    TopCabinetHandle4 = TopCabinetHandle3.clone()    TopCabinetHandle4.move(-40, 0)    TopCabinetHandle4.draw(win)    LeftOuterTopCabinetHandle = TopCabinetHandle4.clone()    LeftOuterTopCabinetHandle.move(-65,0)    LeftOuterTopCabinetHandle.draw(win)    RightOuterTopCabinetHandle = LeftOuterTopCabinetHandle.clone()    RightOuterTopCabinetHandle.move(170,0)    RightOuterTopCabinetHandle.draw(win)    LeftAboveFridgeCabinetHandle = RightOuterTopCabinetHandle.clone()    LeftAboveFridgeCabinetHandle.move(-380,0)    LeftAboveFridgeCabinetHandle.draw(win)    sink2 = Rectangle(Point(540, 200), Point(545, 160))    sink2.setFill('silver')    sink2.draw(win)    sink4 = Rectangle(Point(530, 195), Point(525,200))    sink4.setFill('silver')    sink4.draw(win)        sink3 = Rectangle(Point(545, 205), Point(525, 200))    sink3.setFill('silver')    sink3.draw(win)            sink = Rectangle(Point(580, 165), Point(500, 150))    sink.setFill('silver')    sink.draw(win)    hotWater = sink4.clone()    hotWater.move(10, -30)    hotWater.draw(win)    coldWater = hotWater.clone()    coldWater.move(10,0)    coldWater.draw(win)    Oven = Rectangle(Point(195, 30), Point(350, 150))    Oven.setFill('silver')        Oven.draw(win)    StoveTop = Rectangle(Point(200, 150), Point(340, 160))    StoveTop.setFill('Gray')    StoveTop.draw(win)        OvenBottomDrawer = Rectangle(Point(200,30), Point(340, 0))        OvenBottomDrawer.setFill('silver')    OvenBottomDrawer.draw(win)        OvenSquare = Rectangle(Point(220, 40), Point(320, 120))    OvenSquare.setFill('dimgray')    OvenSquare.draw(win)    OvenHandle = Rectangle(Point(250, 133), Point(290, 135))    OvenHandle.setFill('dark gray')    OvenHandle.draw(win)    OvenHandle2 = OvenHandle.clone()    OvenHandle2.move(0, -115)    OvenHandle2.draw(win)        window2 = Rectangle(Point(350, 360), Point(490, 205))    window2.setFill('saddle brown')    window2.draw(win)    windowsky = Rectangle(Point(360, 350), Point(480, 220))    windowsky.setFill('sky blue')    windowsky.draw(win)    windowgrass = Rectangle(Point(360, 260), Point(480, 220))    windowgrass.setFill('green')    windowgrass.setOutline('green')    windowgrass.draw(win)    treeTrunk = Rectangle(Point(390, 290), Point(380, 240))    treeTrunk.setOutline('brown')    treeTrunk.setFill('brown')    treeTrunk.draw(win)    leaves5 = Oval(Point(360, 315), Point(390, 270))    leaves5.setFill('forest green')    leaves5.setOutline('forest green')    leaves5.draw(win)        leaves2 = Oval(Point(370, 315), Point(415, 290))    leaves2.setFill('forest green')    leaves2.setOutline('green')    leaves2.draw(win)        leaves4 = Oval(Point(370, 330), Point(410, 300))    leaves4.setOutline('forest green')    leaves4.setFill('forest green')    leaves4.draw(win)    leaves3 = Oval(Point(360, 320), Point(400, 290))    leaves3.setFill('forest green')    leaves3.setOutline('forest green')    leaves3.draw(win)    leaves = Oval(Point(415, 305), Point(380, 270))    leaves.setFill('forest green')    leaves.setOutline('forest green')    leaves.draw(win)    cloud = Oval(Point(420, 320), Point(440, 340))    cloud.setOutline('white')    cloud.setFill('white')    cloud.draw(win)    cloud1 = cloud.clone()    cloud1.move(10,0)    cloud1.draw(win)    cloud2 = cloud1.clone()    cloud2.move(15,0)    cloud2.draw(win)    cloud3 = cloud2.clone()    cloud3.move(-5, 5)    cloud3.draw(win)    cloud4 = cloud3.clone()    cloud4.move(-10, 5)    cloud4.draw(win)    window = Rectangle(Point(360,350), Point(480, 220))    window.draw(win)        windowledge = Rectangle(Point(340, 200), Point(500, 205))    windowledge.setFill('saddle brown')        windowledge.draw(win)    windowledge2 = windowledge.clone()    windowledge2.move(0, 160)    windowledge2.draw(win)    windowDivider = Line(Point(420, 350), Point(420, 220))    windowDivider.draw(win)    windowDivider2 = Line(Point(360, 285), Point(480, 285))    windowDivider2.draw(win)    def isBetween(x, end1, end2):    return end1 <= x <= end2 or end2 <= x <= end1def isBetweenTri(x, end1, end2, end3):    return end1 <= x <= end2 or end2 <= x <= end1 or end1 <= x <= end3 or end3 <= x <= end1 or end2 <= x <= end3 or end3 <= x <= end2def isInside(point, rect):    pt1 = rect.getP1()    pt2 = rect.getP2()    return isBetween(point.getX(), pt1.getX(), pt2.getX()) and \           isBetween(point.getY(), pt1.getY(), pt2.getY())def isInsideTri(points, poly):        polygonPoints = poly.getPoints()    ptTri1 = polygonPoints[0]    ptTri2 = polygonPoints[1]    ptTri3 = polygonPoints[2]    return isBetweenTri(points.getX(), ptTri1.getX(), ptTri2.getX(), ptTri3.getX()) and \        isBetweenTri(points.getY(), ptTri1.getY(), ptTri2.getY(), ptTri3.getY())def Quit():                        end = open('gameInstructions.html', 'w')        contents = '''<html>        <head></head>        <body><p>Did you find the cheeses? Thanks for playing!</p></body>        </html>'''                end.write(contents)        end.close()                filename = 'file:///'  + os.path.realpath('endscript.html')        webbrowser.open(filename)        def easy():    found1 = 0    found2 = 0    tries = 10    Cheese1Hint = Text(Point(110, 545), 'Cheese #1 \n Where do you keep nonperishable items?')    Cheese1Hint.setSize(9)    Cheese1Hint.setStyle("bold")    Cheese2Hint = Text(Point(105, 520), 'Cheese #2 \n When you eat, where do you put your feet?')    Cheese2Hint.setSize(9)    Cheese2Hint.setStyle("bold")    Cheese1 = Polygon([Point(35, 376), Point(50,410), Point(67,376)]) #cabinet    Cheese1.setFill('yellow')    Cheese1.setOutline('yellow')    Cheese2 = Polygon([Point(740,0), Point(760,35), Point(780,0)]) #undertable    Cheese2.setFill('yellow')    Cheese2.setOutline('yellow')    for i in range(10):        triesBox = Rectangle(Point(360,590), Point(430, 570))        triesBox.setFill('grey')        triesBox.setOutline('grey')        triesBox.draw(win)        triesLabel = Text(Point(390,580), 'Tries:')        triesLabel.setTextColor('white')        triesLabel.draw(win)        triesLabel2 = Text(Point(410, 580), tries)        triesLabel2.setTextColor('white')        triesLabel2.draw(win)        clickPtTri = win.getMouse()        tries = tries-1        if tries == 0:            break        if isInsideTri(clickPtTri, Cheese1):            Cheese1.draw(win)            found1 = 1        elif isInsideTri(clickPtTri, Cheese2):            Cheese2.draw(win)            found2 = 1        if found1 == 1 and found2 == 1:            break        if tries == 7 and found1==0 and found2==0:            Cheese1Hint.draw(win)            Cheese2Hint.draw(win)        if tries == 6 and found1==1 and found2==0:            Cheese2Hint.draw(win)        if tries == 6 and found1 ==0 and found2==1:            Cheese1Hint.draw(win)    if found1==1 and found2==0:        msg = Text(Point(420,190), "You only found one of the cheeses! Here's where the other one is.")        msg.setStyle('bold')        msg.draw(win)        Cheese2.draw(win)        Cheese1Hint.undraw()        Cheese2Hint.undraw()    elif found1==0 and found2==1:        msg = Text(Point(420,190), "You only found one of the cheeses! Here's where the other one is.")        msg.setStyle('bold')        msg.draw(win)        Cheese1.draw(win)        Cheese1Hint.undraw()        Cheese2Hint.undraw()    elif found1 ==0 and found2 == 0:        msg = Text(Point(420,190), "You didn't find any of the cheeses! Here's where they are.")        msg.setStyle('bold')        msg.draw(win)        Cheese1.draw(win)        Cheese2.draw(win)        Cheese1Hint.undraw()        Cheese2Hint.undraw()    else:        msg = Text(Point(420,190), "Congrats! You found all the cheeses.")        msg.setStyle('bold')        msg.draw(win)        Cheese1Hint.undraw()        Cheese2Hint.undraw()        answer = input('Play again? Type Y/N: ')    if answer == 'Y' or answer == 'y':        msg.undraw()        Cheese1.undraw()        Cheese2.undraw()        main()    elif answer == 'N' or answer == 'n':        win.close()        Quit()    else:        print('I do not understand.')            def medium():    found1 = 0    found2 = 0    tries = 10    Cheese1 = Polygon([Point(345, 562), Point(360, 588), Point(375, 562)]) #cabinet    Cheese1.setFill('yellow')    Cheese1.setOutline('yellow')    Cheese2 = Polygon([Point(660,110), Point(675,130), Point(690,110)]) #table    Cheese2.setFill('yellow')    Cheese2.setOutline('yellow')    Cheese1Hint = Text(Point(110, 545), 'Cheese #1 \n On top of the cabinet.')    Cheese1Hint.setSize(9)    Cheese1Hint.setStyle("bold")    Cheese2Hint = Text(Point(105, 520), 'Cheese #2 \n Where do you eat dinner?')    Cheese2Hint.setSize(9)    Cheese2Hint.setStyle("bold")        for i in range(10):        triesBox = Rectangle(Point(360,590), Point(430, 570))        triesBox.setFill('grey')        triesBox.setOutline('grey')        triesBox.draw(win)        triesLabel = Text(Point(390,580), 'Tries:')        triesLabel.setTextColor('white')        triesLabel.draw(win)        triesLabel2 = Text(Point(410, 580), tries)        triesLabel2.setTextColor('white')        triesLabel2.draw(win)        clickPtTri = win.getMouse()        tries = tries - 1            if isInsideTri(clickPtTri, Cheese1):            Cheese1.draw(win)            found1 = 1        if isInsideTri(clickPtTri, Cheese2):            Cheese2.draw(win)            found2 = 1        if found1 == 1 and found2 == 1:            break        if tries == 7 and found1==0 and found2==0:            Cheese1Hint.draw(win)            Cheese2Hint.draw(win)        if tries == 6 and found1==0 and found2==1:            Cheese1Hint.draw(win)        if tries == 6 and found1 == 1 and found2==0:            Cheese2Hint.draw(win)            if found1==1 and found2==0:        msg = Text(Point(420,190), "You only found one of the cheeses! Here's where the other one is.")        msg.setStyle('bold')        msg.draw(win)        Cheese2.draw(win)        Cheese1Hint.undraw()        Cheese2Hint.undraw()    elif found1==0 and found2==1:        msg = Text(Point(420,190), "You only found one of the cheeses! Here's where the other one is.")        msg.setStyle('bold')        msg.draw(win)        Cheese1.draw(win)        Cheese1Hint.undraw()        Cheese2Hint.undraw()    elif found1 ==0 and found2 == 0:        msg = Text(Point(420,190), "You didn't find any of the cheeses! Here's where they are.")        msg.setStyle('bold')        msg.draw(win)        Cheese1.draw(win)        Cheese2.draw(win)        Cheese1Hint.undraw()        Cheese2Hint.undraw()    else:        msg = Text(Point(420,190), "Congrats! You found all the cheeses.")        msg.setStyle('bold')        msg.draw(win)        Cheese1Hint.undraw()        Cheese2Hint.undraw()            answer = input('Play again? Type Y/N: ')    if answer == 'Y' or answer == 'y':        msg.undraw()        Cheese1.undraw()        Cheese2.undraw()        main()    elif answer == 'N' or answer == 'n':        win.close()        Quit()    else:        print('I do not understand.')        def hard():    found1 = 0    found2 = 0    tries = 10    Cheese1 = Polygon([Point(230,45), Point(240, 60), Point(250,45)]) #hard    Cheese1.setFill('yellow')    Cheese1.setOutline('yellow')    Cheese2 = Polygon([Point(140,230), Point(150, 247), Point(160, 230)]) #hard    Cheese2.setFill('yellow')    Cheese2.setOutline('yellow')    Cheese1Hint = Text(Point(110, 545), 'Cheese #1 \n Brrrr!')    Cheese1Hint.setStyle('bold')    Cheese1Hint.setSize(9)    Cheese2Hint = Text(Point(105, 520), 'Cheese #2 \n What is warm and toasty?')    Cheese2Hint.setStyle('bold')    Cheese2Hint.setSize(9)    for i in range(10):        triesBox = Rectangle(Point(360,590), Point(430, 570))        triesBox.setFill('grey')        triesBox.setOutline('grey')        triesBox.draw(win)        triesLabel = Text(Point(390,580), 'Tries:')        triesLabel.setTextColor('white')        triesLabel.draw(win)        triesLabel2 = Text(Point(410, 580), tries)        triesLabel2.setTextColor('white')        triesLabel2.draw(win)            clickPtTri = win.getMouse()        tries = tries - 1        if isInsideTri(clickPtTri, Cheese1):            Cheese1.draw(win)            found1 = 1        elif isInsideTri(clickPtTri, Cheese2):            Cheese2.draw(win)            found2 = 1        if found1 == 1 and found2 == 1:            break        if tries == 7 and found1==0 and found2==0:                Cheese1Hint.draw(win)                Cheese2Hint.draw(win)        if tries == 6 and found1==1 and found2==0:                Cheese1Hint.draw(win)        if tries == 6 and found1 ==0 and found2==1:                Cheese2Hint.draw(win)                    if found1==1 and found2==0:        msg = Text(Point(420,190), "You only found one of the cheeses! Here's where the other one is.")        msg.setStyle('bold')        msg.draw(win)        Cheese2.draw(win)        Cheese1Hint.undraw()        Cheese2Hint.undraw()    elif found1==0 and found2==1:        msg = Text(Point(420,190), "You only found one of the cheeses! Here's where the other one is.")        msg.setStyle('bold')        msg.draw(win)        Cheese1.draw(win)        Cheese1Hint.undraw()        Cheese2Hint.undraw()    elif found1 ==0 and found2 == 0:        msg = Text(Point(420,190), "You didn't find any of the cheeses! Here's where they are.")        msg.setStyle('bold')        msg.draw(win)        Cheese1.draw(win)        Cheese2.draw(win)        Cheese1Hint.undraw()        Cheese2Hint.undraw()    else:        msg = Text(Point(420,190), "Congrats! You found all the cheeses.")        msg.setStyle('bold')        msg.draw(win)        Cheese1Hint.undraw()        Cheese2Hint.undraw()            answer = input('Play again? Type Y/N: ')    if answer == 'Y' or answer == 'y':        msg.undraw()        Cheese1.undraw()        Cheese2.undraw()        main()    elif answer == 'N' or answer == 'n':        win.close()        Quit()    else:        print('I do not understand.')def main():    instruction = Rectangle(Point(10,560), Point(80, 590))    instruction.setFill('red')    instruction.draw(win)    label1 = Text(Point(45, 574), 'Instructions')    label1.setTextColor('white')    label1.draw(win)    cloningPurposes = instruction.clone()    cloningPurposes.move(80,0)    level1 = cloningPurposes.clone()    level1.move(480, 0)    level1.draw(win)    label3 = Text(Point(605,574), 'Level 1')    label3.setTextColor('white')    label3.draw(win)        level2 = level1.clone()    level2.move(80, 0)    level2.draw(win)    label4 = Text(Point(685,574), 'Level 2')    label4.setTextColor('white')    label4.draw(win)        level3 = level2.clone()    level3.move(80, 0)    level3.draw(win)    label5 = Text(Point(765,574), 'Level 3')    label5.setTextColor('white')    label5.draw(win)    pt = win.getMouse()    if isInside(pt, instruction):        label1.setTextColor('blue')        fileI = "Instructionsfile.txt"        InstructionsToGame = open(fileI, 'r')        contentsToInstructions = InstructionsToGame.read()        print(contentsToInstructions)          #InstructionsToGame.close()    for i in range(1):        pt = win.getMouse()        if isInside(pt, level1):                        label3.setTextColor('blue')            message.undraw()            easy()                    elif isInside(pt, level2):            label4.setTextColor('blue')            message.undraw()            medium()                                  elif isInside(pt, level3):            label5.setTextColor('blue')            message.undraw()            hard()        else:            print("I don't understand")kitchen()main()